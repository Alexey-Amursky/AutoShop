@startuml

class Product {
- name : string
- manufacturer : string
- costPrice : double
- salePrice : double
- quantity : int

+ Product(name : string, manufacturer : string, costPrice : double, salePrice : double, quantity : int)

+ getName() : string
+ getManufacturer() : string
+ getCostPrice() : double
+ getSalePrice() : double
+ getQuantity() : int

+ setName(name : string) : void
+ setManufacturer(manufacturer : string) : void
+ setCostPrice(costPrice : double) : void
+ setSalePrice(salePrice : double) : void
+ setQuantity(quantity : int) : void
}

Product <-- ProductBuilder
class ProductBuilder {
- product : Product*

+ ProductBuilder() = default

+ getName() : string
+ getManufacturer() : string
+ getCostPrice() : double
+ getSalePrice() : double
+ getQuantity() : int

+ setName(name : string) : Product
+ setManufacturer(manufacturer : string) : Product
+ setCostPrice(costPrice : double) : Product
+ setSalePrice(salePrice : double) : Product
+ setQuantity(quantity : int) : Product

+ Product* CreateProduct() {
    return new Product (category : Category, name : string, manufacturer : string, description : string, costPrice : double, salePrice : double, quantity : int)
    };
}

class Client {
- firstName : string
- lastName : string
- email : string
- phone : string

+ Client(firstName : string, lastName : string, phone : string)

+getFirstName() : string
+getLastName() : string
+getPhone() : string

+setFirstName(firstName:string) : void
+setLastName(lastName:string) : void
+setPhone(phone:string) : void

}

class Date {
- day : string
- month : string
- year : sting

+ Date(day:string, month : string, year : string)

+getDay() : string
+getMonth() : string
+getYear() : string

+ setDay(day : string) : Date
+ setMonth(month : string) : Date
+ setYear(year : string) : Date
+ setFullDate(day, month, year) : Date
}

class Address {
- city : string
- street : string
- home : string
- appartment : string

+ Address(city : string, street : string, home : string, appartment : string)

+ getCity() : string
+ getStreet() : string
+ getHome() : string
+ getAppartment() : string

+ setCity(city : string) : void
+ setStreet(street : string) : void
+ setHome(home : string) : void
+ setAppartment(appartment : string) : void
}

Product <--o Order
Client <--o Order
Date <--o Order
Address <--o Order
class Order {
- product : Product
- client : Client
- date : Date
- address : Address

+ Order (product : Product, client : Client, date : Date, address : Address)

+ getProduct() : Product
+ getClient() : Client
+ getDate() : Date
+ getAddress() : Address

+ setProduct(product : Product) : void
+ setClient(client : Client) : void
+ setDate(date : Date) : void
+ setAddress(address : Address) : void
}

Order <-- OrderBuilder
class OrderBuilder {
- order : Order

+ Order ()

+ setProduct(product : Product) : void
+ setClient(client : Client) : void
+ setDate(date : Date) : void
+ setAddress(address : Address) : void
+ setPaymentMethod(paymentMethod : PaymentMethod) : void

+ Build() : Order
}
@enduml